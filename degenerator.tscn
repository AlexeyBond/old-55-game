[gd_scene load_steps=10 format=3 uid="uid://65nis18dp2wh"]

[ext_resource type="Shader" uid="uid://b7ma85yip2ejt" path="res://degenerator-noise.tres" id="1_xf6bl"]

[sub_resource type="GDScript" id="GDScript_d7ied"]
script/source = "extends Node2D

var target: Node

func _ready():
	$AnimationPlayer.play('start')

func _process(delta):
	pass

func _on_generated():
	$AnimationPlayer.play('end')

func start():
	var generator: WFC2DGenerator = target.degenerate(Vector2i(position/16.0), 4)
	generator.done.connect(self._on_generated)
"

[sub_resource type="Animation" id="Animation_jy43e"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("noise:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("circle:radius")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [128.0]
}

[sub_resource type="Animation" id="Animation_mygwr"]
resource_name = "start"
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("noise:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(1.3, 1.8, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(9, 9), Vector2(8, 8)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("circle:radius")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.4, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [16.0, 120.0, 100.0]
}
tracks/2/type = "method"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(2),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"start"
}]
}

[sub_resource type="Animation" id="Animation_ytrlr"]
resource_name = "end"
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("circle:radius")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.7, 1.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [100.0, 0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("noise:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(8, 8), Vector2(0, 0)]
}
tracks/2/type = "method"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(2),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"queue_free"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_wr81t"]
_data = {
"RESET": SubResource("Animation_jy43e"),
"end": SubResource("Animation_ytrlr"),
"start": SubResource("Animation_mygwr")
}

[sub_resource type="ShaderMaterial" id="ShaderMaterial_p0evf"]
shader = ExtResource("1_xf6bl")

[sub_resource type="GDScript" id="GDScript_slrjc"]
script/source = "@tool
class_name MagicCircle

extends Node2D

@export var radius: float = 128


func _ready():
	pass # Replace with function body.


func _process(delta):
	rotate(delta * deg_to_rad(180))
	queue_redraw()

func _draw():
	draw_arc(Vector2.ZERO, radius, 0, 360, 360, Color.RED, 1.0, true)

	if radius < 16:
		return

	draw_arc(Vector2.ZERO, radius - 16, 0, 360, 360, Color.RED, 1.0, true)

	if radius < 32:
		return

	var t := Time.get_ticks_msec() % 1500
	var k = clamp(float(t) / 250.0, 0.0, 1.0)
	var m = clamp(float(t) / 250.0 - 1.0, 0.0, 1.0)

	for i in range(5):
		var a = i * 360 / 5

		var p = (Vector2.DOWN * (radius - 24)).rotated(deg_to_rad(a))
		var q = p.rotated(deg_to_rad(2 * 360 / 5))

		draw_line(p, q, Color.RED, 0.5, true)

		draw_line(
			lerp(p, q, k),
			lerp(p, q, m),
			Color.RED, 1.5, true
		)
"

[sub_resource type="CircleShape2D" id="CircleShape2D_s6mdk"]
radius = 117.038

[node name="Degenerator" type="Node2D"]
script = SubResource("GDScript_d7ied")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_wr81t")
}

[node name="noise" type="Node2D" parent="."]
scale = Vector2(1e-05, 1e-05)

[node name="ColorRect" type="ColorRect" parent="noise"]
material = SubResource("ShaderMaterial_p0evf")
offset_left = -16.0
offset_top = -16.0
offset_right = 16.0
offset_bottom = 16.0

[node name="circle" type="Node2D" parent="."]
rotation = 9496.06
script = SubResource("GDScript_slrjc")

[node name="Camera2D" type="Camera2D" parent="."]

[node name="desintegrationArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="desintegrationArea"]
shape = SubResource("CircleShape2D_s6mdk")
